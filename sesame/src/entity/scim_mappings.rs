//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1


use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "scim_mappings")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub mapping_id: Uuid,
    pub client_id: Uuid,
    #[sea_orm(column_type = "Text")]
    pub local_attribute: String,
    #[sea_orm(column_type = "Text")]
    pub scim_attribute: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::scim_clients::Entity",
        from = "Column::ClientId",
        to = "super::scim_clients::Column::ClientId",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    ScimClients,
}

impl Related<super::scim_clients::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ScimClients.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
