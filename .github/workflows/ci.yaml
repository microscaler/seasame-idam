name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
#  schedule:
#    - cron: '19 8 * * 5'

jobs:
  rust-build-and-test:
    name: Build and Test Rust Project
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
      checks: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          restore-keys: |
              ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
              ${{ runner.os }}-cargo-
              ${{ runner.os }}-
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            sesame/target/
          key: Linux-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af #@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy
          override: true

      - name: Install required tools
        run: |
          rustup component add --toolchain nightly-x86_64-unknown-linux-gnu rustfmt

      - name: Install required cargo
        run: |
          cargo install clippy-sarif sarif-fmt --force
          cargo install cargo2junit

      - name: Run rust-clippy
        run:
          cargo clippy
          --all-features
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

      - name: Check formatting
        run: cargo fmt --all -- --check
        working-directory: sesame

      - name: Run build
        run: cargo build --release
        working-directory: sesame

#      - name: Run tests
#        run: RUSTC_BOOTSTRAP=1 cargo test -- -Z unstable-options --format json --report-time | tee results.json
#              cat results.json | cargo2junit > TEST-results.xml
#        working-directory: sesame

         # https://github.com/marketplace/actions/junit-report-action
#      - name: Publish Test Report
#        uses: mikepenz/action-junit-report@v5
#        if: success() || failure() # always run even if the previous step fails
#        with:
#          report_paths: '**/TEST-*.xml'

#      - name: Test Summary
#        uses: test-summary/action@v2
#        with:
#          paths: '**/TEST-*.xml'
#        if: always()

      - name: Upload sesame binary
        uses: actions/upload-artifact@v4
        with:
          name: sesame-binary
          path: sesame/target/release/sesame

  openapi-validate:
    name: Validate OpenAPI Spec
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.12.0'

      - name: Install Redocly OpenAPI CLI
        run: npm install

      - name: Validate OpenAPI Spec
        run: npx @redocly/openapi-cli lint ./specs/openapi.yaml || true


#  docker-build:
#    name: Build Docker Image
#    runs-on: ubuntu-latest
#    needs: [rust-build-and-test, openapi-validate]
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Download sesame binary
#        uses: actions/download-artifact@v4
#        with:
#          name: sesame-binary
#          path: sesame/target/release/sesame
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: "{{defaultContext}}:sesame"
#          push: true
#          tags: ghcr.io/microscaler/sesame-idam:latest
