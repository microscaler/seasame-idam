openapi: 3.1.0
info:
  title: PropelAuth
  version: 1.0.0
  description: >-
    # Getting Started


    Welcome to PropelAuth's Backend API documentation! PropelAuth’s backend APIs
    allow you to manage users, organizations, and API keys programmatically.


    Get started by heading over to
    [www.propelauth.com](http://www.propelauth.com) to create an account if you
    haven't already.


    ## Authentication


    The backend API requires an Authorization header with your API key set as a
    bearer token.


    ``` javascript

    {
      "Authorization": "Bearer {YOUR_API_KEY}"
    }

     ```

    You can find your API key by logging into the PropelAuth dashboard and
    navigating to the **Backend Integration** page. Select the environment you
    want to create the API key for (test, staging, prod) and click on **Create
    New API Key**.


    Each of your environments are completely separate, meaning you'll need a
    different API key for each one.


    ## Base URL


    The base URL for the backend API is your environment's Auth URL. Head over
    to the **Frontend Integration** page in your PropelAuth dashboard to find
    yours.


    Similarly to the API key, you'll need a different Auth URL for each of your
    environments (test, staging, prod). Your test Auth URL is generated by
    PropelAuth and will look something like
    "[https://1581439057.propelauthtest.com](https://15814390537.propelauthtest.com)".


    However, your Auth URL for your staging and prod environments are set by
    you. If your app's domain is "[https://acme.com"](https://acme.com), your
    Auth URL will be "[https://auth.acme.com"](https://auth.acme.com).


    ## User API Keys


    PropelAuth offers the ability for [your users to create their own API
    keys](https://docs.propelauth.com/features/api-keys). These API keys cannot
    be used in the Authentication header for this API. However, you can use the
    **API KEY APIs** to create, edit, delete, and validate these API keys for
    your own API.


    ## Questions?


    Check out our docs for more information and feel free to email us at
    [support@propelauth.com](https://mailto:support@propelauth.com) if you have
    any questions.
servers:
  - url: '{AUTH_URL}'
  - url: ''
paths:
  /api/backend/v1/user/:
    parameters: []
    post:
      summary: Create User
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:29:06 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '50'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
  /api/backend/v1/user/{USER_ID}:
    parameters:
      - name: USER_ID
        in: path
        required: true
        description: The ID of the user to fetch
        schema:
          type: string
    get:
      summary: Fetch User By User ID
      parameters:
        - name: include_orgs
          in: query
          required: false
          description: Whether to include the user’s orgs in the response
          schema:
            type: boolean
      responses:
        '200':
          description: Success Response (200)
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:29:34 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: 512
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: true
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: string
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  email:
                    type: string
                    format: email
                  email_confirmed:
                    type: boolean
                  username:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  picture_url:
                    type: string
                    format: uri
                  properties:
                    type: object
                    properties:
                      favoriteSport:
                        type: string
                  has_password:
                    type: boolean
                  update_password_required:
                    type: boolean
                  locked:
                    type: boolean
                  enabled:
                    type: boolean
                  mfa_enabled:
                    type: boolean
                  can_create_orgs:
                    type: boolean
                  created_at:
                    type: integer
                  last_active_at:
                    type: integer
                  org_id_to_org_info:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        org_id:
                          type: string
                        org_name:
                          type: string
                        org_metadata:
                          type: object
                          properties:
                            timezone:
                              type: string
                        user_role:
                          type: string
                        url_safe_org_name:
                          type: string
                        inherited_user_roles_plus_current_role:
                          type: array
                          items:
                            type: string
                        user_permissions:
                          type: array
                          items:
                            type: string
                        org_role_structure:
                          type: string
                        additional_roles:
                          type: array
                          items:
                            type: string
                  legacy_user_id:
                    type: string
              example:
                user_id: "31c41c16-c281-44ae-9602-8a047e3bf33d"
                email: "test@example.com"
                email_confirmed: true
                username: "airbud3"
                first_name: "Buddy"
                last_name: "Framm"
                picture_url: "https://example.com/picture.jpg"
                properties:
                  favoriteSport: "basketball"
                has_password: true
                update_password_required: false
                locked: false
                enabled: true
                mfa_enabled: false
                can_create_orgs: true
                created_at: 1627600000
                last_active_at: 1627600000
                org_id_to_org_info:
                  "1189c444-8a2d-4c41-8b4b-ae43ce79a492":
                    org_id: "1189c444-8a2d-4c41-8b4b-ae43ce79a492"
                    org_name: "Example Org"
                    org_metadata:
                      timezone: "EST"
                    user_role: "Owner"
                    url_safe_org_name: "example-org"
                    inherited_user_roles_plus_current_role:
                      - "Admin"
                      - "Owner"
                      - "Member"
                    user_permissions:
                      - "can_view_billing"
                    org_role_structure: "single_role_in_hierarchy"
                    additional_roles: []
                legacy_user_id: "1234567890"
    #Need to work on put and the remainder
    put:
      summary: Update User
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:48:59 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                picture_url:
                  type: string
                  format: uri
                properties:
                  type: object
                  properties:
                    favoriteSport:
                      type: string
                update_password_required:
                  type: boolean
                legacy_user_id:
                  type: string
                  format: color
    delete:
      summary: Delete User
      parameters: []
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:54:44 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
  paths:
    /api/backend/v1/user/email:
      get:
        summary: Fetch User By Email
        description: Retrieve a user’s details by their email address, optionally including their organizations.
        parameters:
          - name: email
            in: query
            required: true
            description: The email address of the user to fetch
            schema:
              type: string
              format: email
          - name: include_orgs
            in: query
            required: false
            description: Whether to include the user’s orgs in the response
            schema:
              type: boolean
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user_id:
                      type: string
                    email:
                      type: string
                      format: email
                    email_confirmed:
                      type: boolean
                    username:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                    picture_url:
                      type: string
                      format: uri
                    properties:
                      type: object
                      properties:
                        favoriteSport:
                          type: string
                    has_password:
                      type: boolean
                    update_password_required:
                      type: boolean
                    locked:
                      type: boolean
                    enabled:
                      type: boolean
                    mfa_enabled:
                      type: boolean
                    can_create_orgs:
                      type: boolean
                    created_at:
                      type: integer
                      description: Epoch timestamp of user creation
                    last_active_at:
                      type: integer
                      description: Epoch timestamp of last activity
                    org_id_to_org_info:
                      type: object
                      additionalProperties:
                        type: object
                        properties:
                          org_id:
                            type: string
                          org_name:
                            type: string
                          org_metadata:
                            type: object
                            properties:
                              timezone:
                                type: string
                          user_role:
                            type: string
                          url_safe_org_name:
                            type: string
                          inherited_user_roles_plus_current_role:
                            type: array
                            items:
                              type: string
                          user_permissions:
                            type: array
                            items:
                              type: string
                          org_role_structure:
                            type: string
                          additional_roles:
                            type: array
                            items:
                              type: string
                    legacy_user_id:
                      type: string
                example:
                  user_id: "31c41c16-c281-44ae-9602-8a047e3bf33d"
                  email: "test@example.com"
                  email_confirmed: true
                  username: "airbud3"
                  first_name: "Buddy"
                  last_name: "Framm"
                  picture_url: "https://example.com/picture.jpg"
                  properties:
                    favoriteSport: "basketball"
                  has_password: true
                  update_password_required: false
                  locked: false
                  enabled: true
                  mfa_enabled: false
                  can_create_orgs: true
                  created_at: 1627600000
                  last_active_at: 1627600000
                  org_id_to_org_info:
                    "1189c444-8a2d-4c41-8b4b-ae43ce79a492":
                      org_id: "1189c444-8a2d-4c41-8b4b-ae43ce79a492"
                      org_name: "Example Org"
                      org_metadata:
                        timezone: "EST"
                      user_role: "Owner"
                      url_safe_org_name: "example-org"
                      inherited_user_roles_plus_current_role:
                        - "Admin"
                        - "Owner"
                        - "Member"
                      user_permissions:
                        - "can_view_billing"
                      org_role_structure: "single_role_in_hierarchy"
                      additional_roles: [ ]
                  legacy_user_id: "1234567890"
  
  /api/backend/v1/user/username:
    get:
      summary: Fetch User By Username
      description: Retrieve a user’s details by their username, optionally including their organizations.
      parameters:
        - name: username
          in: query
          required: true
          description: The username of the user to fetch
          schema:
            type: string
        - name: include_orgs
          in: query
          required: false
          description: Whether to include the user’s orgs in the response
          schema:
            type: boolean
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  email:
                    type: string
                    format: email
                  email_confirmed:
                    type: boolean
                  username:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  picture_url:
                    type: string
                    format: uri
                  properties:
                    type: object
                    properties:
                      favoriteSport:
                        type: string
                  has_password:
                    type: boolean
                  update_password_required:
                    type: boolean
                  locked:
                    type: boolean
                  enabled:
                    type: boolean
                  mfa_enabled:
                    type: boolean
                  can_create_orgs:
                    type: boolean
                  created_at:
                    type: integer
                    description: Epoch timestamp of user creation
                  last_active_at:
                    type: integer
                    description: Epoch timestamp of last activity
                  org_id_to_org_info:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        org_id:
                          type: string
                        org_name:
                          type: string
                        org_metadata:
                          type: object
                          properties:
                            timezone:
                              type: string
                        user_role:
                          type: string
                        url_safe_org_name:
                          type: string
                        inherited_user_roles_plus_current_role:
                          type: array
                          items:
                            type: string
                        user_permissions:
                          type: array
                          items:
                            type: string
                        org_role_structure:
                          type: string
                        additional_roles:
                          type: array
                          items:
                            type: string
                  legacy_user_id:
                    type: string
              example:
                user_id: "31c41c16-c281-44ae-9602-8a047e3bf33d"
                email: "test@example.com"
                email_confirmed: true
                username: "airbud3"
                first_name: "Buddy"
                last_name: "Framm"
                picture_url: "https://example.com/picture.jpg"
                properties:
                  favoriteSport: "basketball"
                has_password: true
                update_password_required: false
                locked: false
                enabled: true
                mfa_enabled: false
                can_create_orgs: true
                created_at: 1627600000
                last_active_at: 1627600000
                org_id_to_org_info:
                  "1189c444-8a2d-4c41-8b4b-ae43ce79a492":
                    org_id: "1189c444-8a2d-4c41-8b4b-ae43ce79a492"
                    org_name: "Example Org"
                    org_metadata:
                      timezone: "EST"
                    user_role: "Owner"
                    url_safe_org_name: "example-org"
                    inherited_user_roles_plus_current_role:
                      - "Admin"
                      - "Owner"
                      - "Member"
                    user_permissions:
                      - "can_view_billing"
                    org_role_structure: "single_role_in_hierarchy"
                    additional_roles: [ ]
                legacy_user_id: "1234567890"
  /api/backend/v1/user/query:
    get:
      summary: Query Users
      description: >
        Query users by email or username, filter by legacy user ID,
        optionally include their organizations, sort, and paginate.
      parameters:
        - name: email_or_username
          in: query
          required: false
          description: Email address or username to search for
          schema:
            type: string
        - name: legacy_user_id
          in: query
          required: false
          description: Legacy user ID to filter by
          schema:
            type: string
        - name: include_orgs
          in: query
          required: false
          description: Whether to include each user’s organizations
          schema:
            type: boolean
        - name: order_by
          in: query
          required: false
          description: Sort order
          schema:
            type: string
            enum:
              - CREATED_AT_ASC
              - CREATED_AT_DESC
        - name: page_number
          in: query
          required: false
          description: Page number (1-based)
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: page_size
          in: query
          required: false
          description: Number of users per page
          schema:
            type: integer
            minimum: 1
            default: 10
      responses:
        '200':
          description: Paginated list of users matching the query
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  total_results:
                    type: integer
                  page_number:
                    type: integer
                  page_size:
                    type: integer
                  order_by:
                    type: string
              example:
                results:
                  - user_id: "31c41c16-c281-44ae-9602-8a047e3bf33d"
                    email: "test@example.com"
                    email_confirmed: true
                    username: "airbud3"
                    first_name: "Buddy"
                    last_name: "Framm"
                    picture_url: "https://example.com/picture.jpg"
                    properties:
                      favoriteSport: "basketball"
                    has_password: true
                    update_password_required: false
                    locked: false
                    enabled: true
                    mfa_enabled: false
                    can_create_orgs: true
                    created_at: 1627600000
                    last_active_at: 1627600000
                    org_id_to_org_info:
                      "1189c444-8a2d-4c41-8b4b-ae43ce79a492":
                        org_id: "1189c444-8a2d-4c41-8b4b-ae43ce79a492"
                        org_name: "Example Org"
                        org_metadata:
                          timezone: "EST"
                        user_role: "Owner"
                        url_safe_org_name: "example-org"
                        inherited_user_roles_plus_current_role:
                          - "Admin"
                          - "Owner"
                          - "Member"
                        user_permissions:
                          - "can_view_billing"
                        org_role_structure: "single_role_in_hierarchy"
                        additional_roles: [ ]
                    legacy_user_id: "1234567890"
                total_results: 1
                page_number: 1
                page_size: 10
                order_by: "CREATED_AT_DESC"
  /api/backend/v1/user/{USER_ID}/email:
    parameters: []
    put:
      summary: Update User Email
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:49:11 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                new_email:
                  type: string
                  format: email
                require_email_confirmation:
                  type: boolean
  /api/backend/v1/user/{USER_ID}/password:
    parameters: []
    put:
      summary: Update User Password
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:49:26 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                ask_user_to_update_password_on_login:
                  type: boolean
  /api/backend/v1/magic_link:
    parameters: []
    post:
      summary: Create Magic Link
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:49:54 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '283'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                redirect_to_url:
                  type: string
                  format: uri
                expires_in_hours:
                  type: integer
                create_new_user_if_one_doesnt_exist:
                  type: boolean
  /api/backend/v1/access_token:
    parameters: []
    post:
      summary: Create Access Token
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Thu, 11 Apr 2024 15:00:01 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '1485'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                duration_in_minutes:
                  type: integer
  /api/backend/v1/migrate_user/:
    parameters: []
    post:
      summary: Migrate User From External Source
      parameters:
        - name: page_size
          in: query
          required: false
          example: '10'
          schema:
            type: integer
        - name: page_number
          in: query
          required: false
          example: '1'
          schema:
            type: integer
        - name: order_by
          in: query
          required: false
          example: CREATED_AT_ASC
          schema:
            type: string
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:53:39 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '50'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                email_confirmed:
                  type: boolean
                existing_user_id:
                  type: string
                  format: utc-millisec
                existing_password_hash:
                  type: string
                existing_mfa_base32_encoded_secret:
                  type: string
                update_password_required:
                  type: boolean
                enabled:
                  type: boolean
                username:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                picture_url:
                  type: string
                  format: uri
                properties:
                  type: object
                  properties:
                    favoriteSport:
                      type: string
  /api/backend/v1/migrate_user/password:
    parameters: []
    post:
      summary: Update Migrated User's Password
      parameters: []
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Fri, 21 Mar 2025 18:04:29 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                password_hash:
                  type: string
  /api/backend/v1/user/{USER_ID}/disable:
    parameters: []
    post:
      summary: Block User
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:55:05 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
  /api/backend/v1/user/{USER_ID}/enable:
    parameters: []
    post:
      summary: Unblock User
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:55:09 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
  /api/backend/v1/user/{USER_ID}/disable_2fa:
    parameters: []
    post:
      summary: Disable User 2FA
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:55:15 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
  /api/backend/v1/resend_email_confirmation:
    parameters: []
    post:
      summary: Resend Email Confirmation
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '204':
          headers:
            date:
              schema:
                type: string
              example: Mon, 10 Jun 2024 19:41:12 GMT
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (204)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
  /api/backend/v1/user/{USER_ID}/logout_all_sessions:
    parameters: []
    post:
      summary: Force Logout All User Sessions
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '204':
          headers:
            date:
              schema:
                type: string
              example: Mon, 17 Jun 2024 18:27:57 GMT
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (204)
  /api/backend/v1/org/{ORG_ID}:
    parameters:
      - name: ORG_ID
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Fetch Org
      parameters: []
      responses:
        '200':
          headers:
            Access-Control-Allow-Credentials:
              schema:
                type: boolean
              example: 'true'
            Alt-Svc:
              schema:
                type: string
              example: h3=":443"; ma=2592000
            Content-Length:
              schema:
                type: integer
              example: '330'
            Content-Type:
              schema:
                type: string
              example: application/json
            Cross-Origin-Embedder-Policy:
              schema:
                type: string
              example: require-corp
            Cross-Origin-Opener-Policy:
              schema:
                type: string
              example: same-origin
            Cross-Origin-Resource-Policy:
              schema:
                type: string
              example: same-origin
            Date:
              schema:
                type: string
              example: Mon, 10 Jun 2024 19:44:44 GMT
            Permissions-Policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            Referrer-Policy:
              schema:
                type: string
              example: no-referrer
            Server:
              schema:
                type: string
              example: Caddy
            Strict-Transport-Security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            X-Content-Type-Options:
              schema:
                type: string
              example: nosniff
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
              example: none
            X-Xss-Protection:
              schema:
                type: integer
              example: 1; mode=block
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  org_id:
                    type: string
                  name:
                    type: string
                  url_safe_org_slug:
                    type: string
                  can_setup_saml:
                    type: boolean
                  is_saml_configured:
                    type: boolean
                  is_saml_in_test_mode:
                    type: boolean
                  domain:
                    type: string
                  domain_autojoin:
                    type: boolean
                  domain_restrict:
                    type: boolean
                  max_users:
                    type: integer
                  custom_role_mapping_name:
                    type: string
    put:
      summary: Update Org
      parameters:
        - name: ORG_ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 18:08:07 GMT
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                domain:
                  type: string
                extra_domains:
                  type: array
                  items:
                    type: string
                enable_auto_joining_by_domain:
                  type: boolean
                members_must_have_matching_domain:
                  type: boolean
                max_users:
                  type: integer
                can_setup_saml:
                  type: boolean
                legacy_org_id:
                  type: string
                  format: utc-millisec
                require_2fa_by:
                  type: string
                  format: style
                metadata:
                  type: object
                  properties:
                    customKey:
                      type: string
    delete:
      summary: Delete Org
      parameters: []
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 18:08:14 GMT
            content-length:
              schema:
                type: integer
              example: '0'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
  /api/backend/v1/org/query:
    parameters: []
    get:
      summary: Fetch Orgs
      parameters:
        - name: page_size
          in: query
          required: false
          description: The number of organizations to return per page
          example: '10'
          schema:
            type: integer
        - name: page_number
          in: query
          required: false
          description: The page number to return
          example: '0'
          schema:
            type: integer
        - name: order_by
          in: query
          required: false
          description: Possible values include CREATED_AT_ASC, CREATED_AT_DESC, NAME
          example: CREATED_AT_ASC
          schema:
            type: string
        - name: name
          in: query
          required: false
          description: >-
            A name to search for. We'll return any organizations whose name
            contains this value
          example: acme.com
          schema:
            type: string
        - name: legacy_org_id
          in: query
          required: false
          example: '1234'
          schema:
            type: integer
      responses:
        '200':
          headers:
            Access-Control-Allow-Credentials:
              schema:
                type: boolean
              example: 'true'
            Alt-Svc:
              schema:
                type: string
              example: h3=":443"; ma=2592000
            Content-Length:
              schema:
                type: integer
              example: '220'
            Content-Type:
              schema:
                type: string
              example: application/json
            Cross-Origin-Embedder-Policy:
              schema:
                type: string
              example: require-corp
            Cross-Origin-Opener-Policy:
              schema:
                type: string
              example: same-origin
            Cross-Origin-Resource-Policy:
              schema:
                type: string
              example: same-origin
            Date:
              schema:
                type: string
              example: Mon, 10 Jun 2024 19:46:08 GMT
            Permissions-Policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            Referrer-Policy:
              schema:
                type: string
              example: no-referrer
            Server:
              schema:
                type: string
              example: Caddy
            Strict-Transport-Security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            X-Content-Type-Options:
              schema:
                type: string
              example: nosniff
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
              example: none
            X-Xss-Protection:
              schema:
                type: integer
              example: 1; mode=block
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  orgs:
                    type: array
                    items:
                      type: object
                      properties:
                        org_id:
                          type: string
                        name:
                          type: string
                        is_saml_configured:
                          type: boolean
                        custom_role_mapping_name:
                          type: string
                  total_orgs:
                    type: integer
                  current_page:
                    type: integer
                  page_size:
                    type: integer
                  has_more_results:
                    type: boolean
  /api/backend/v1/user/org/{ORG_ID}:
    parameters: []
    get:
      summary: Fetch Users in Org
      parameters:
        - name: page_size
          in: query
          required: false
          description: The number of users to return per page
          example: '10'
          schema:
            type: integer
        - name: page_number
          in: query
          required: false
          description: The page number to return
          example: '0'
          schema:
            type: integer
        - name: role
          in: query
          required: false
          description: >-
            Only return users with this role within the organization. This is
            case sensitive.
          example: Admin
          schema:
            type: string
        - name: include_orgs
          in: query
          required: false
          description: Whether to include all organizations the user is in in the response
          example: 'true'
          schema:
            type: boolean
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:58:27 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '622'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        user_id:
                          type: string
                        role_in_org:
                          type: string
                        email:
                          type: string
                          format: email
                        email_confirmed:
                          type: boolean
                        has_password:
                          type: boolean
                        first_name:
                          type: string
                        last_name:
                          type: string
                        picture_url:
                          type: string
                          format: uri
                        properties:
                          type: object
                          properties:
                            metadata:
                              type: object
                              properties:
                                test:
                                  type: string
                            tos:
                              type: boolean
                        metadata:
                          type: object
                          properties:
                            test:
                              type: string
                        locked:
                          type: boolean
                        enabled:
                          type: boolean
                        mfa_enabled:
                          type: boolean
                        can_create_orgs:
                          type: boolean
                        created_at:
                          type: integer
                        last_active_at:
                          type: integer
                        update_password_required:
                          type: boolean
                  total_users:
                    type: integer
                  current_page:
                    type: integer
                  page_size:
                    type: integer
                  has_more_results:
                    type: boolean
  /api/backend/v1/org/:
    parameters: []
    post:
      summary: Create Org
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:58:56 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '67'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  org_id:
                    type: string
                  name:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                domain:
                  type: string
                enable_auto_joining_by_domain:
                  type: boolean
                members_must_have_matching_domain:
                  type: boolean
                custom_role_mapping_name:
                  type: string
                legacy_org_id:
                  type: string
                  format: utc-millisec
                max_users:
                  type: integer
  /api/backend/v1/org/add_user:
    parameters: []
    post:
      summary: Add User to Org
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 17:58:56 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '169'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                org_id:
                  type: string
                role:
                  type: string
  /api/backend/v1/invite_user:
    parameters: []
    post:
      summary: Invite User to Org
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Thu, 11 Apr 2024 15:01:37 GMT
            content-type:
              schema:
                type: string
              example: application/json
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
            example: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                org_id:
                  type: string
                role:
                  type: string
                additional_roles:
                  type: array
                  items:
                    type: string

  /api/backend/v1/org/change_role:
    parameters: []
    post:
      summary: Change Role
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Thu, 11 Apr 2024 15:02:02 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                org_id:
                  type: string
                role:
                  type: string
  /api/backend/v1/org/remove_user:
    parameters: []
    post:
      summary: Remove User From Org
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Thu, 11 Apr 2024 15:03:15 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                org_id:
                  type: string
  /api/backend/v1/org/{ORG_ID}/allow_saml:
    parameters:
      - name: ORG_ID
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Enable SAML for Org
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 18:08:34 GMT
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
  /api/backend/v1/org/{ORG_ID}/disallow_saml:
    parameters:
      - name: ORG_ID
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Disable SAML for Org
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 10 Apr 2024 18:08:39 GMT
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
  # Rust Test missing for this path
  /api/backend/v1/custom_role_mappings:
    parameters: []
    get:
      summary: Fetch Role Configurations
      parameters: []
      responses:
        '200':
          headers:
            Access-Control-Allow-Credentials:
              schema:
                type: boolean
              example: 'true'
            Alt-Svc:
              schema:
                type: string
              example: h3=":443"; ma=2592000
            Content-Length:
              schema:
                type: integer
              example: '158'
            Content-Type:
              schema:
                type: string
              example: application/json
            Cross-Origin-Embedder-Policy:
              schema:
                type: string
              example: require-corp
            Cross-Origin-Opener-Policy:
              schema:
                type: string
              example: same-origin
            Cross-Origin-Resource-Policy:
              schema:
                type: string
              example: same-origin
            Date:
              schema:
                type: string
              example: Mon, 03 Jun 2024 17:24:28 GMT
            Permissions-Policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            Referrer-Policy:
              schema:
                type: string
              example: no-referrer
            Server:
              schema:
                type: string
              example: Caddy
            Strict-Transport-Security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            X-Content-Type-Options:
              schema:
                type: string
              example: nosniff
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
              example: none
            X-Xss-Protection:
              schema:
                type: integer
              example: 1; mode=block
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  custom_role_mappings:
                    type: array
                    items:
                      type: object
                      properties:
                        custom_role_mapping_name:
                          type: string
                        num_orgs_subscribed:
                          type: integer
  /:
    parameters: []
    get:
      summary: Get Pending Org Invites
      parameters: []
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Mon, 17 Jun 2024 18:21:53 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '343'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_invites:
                    type: integer
                  current_page:
                    type: integer
                  page_size:
                    type: integer
                  has_more_results:
                    type: boolean
                  invites:
                    type: array
                    items:
                      type: object
                      properties:
                        invitee_email:
                          type: string
                          format: email
                        org_id:
                          type: string
                        org_name:
                          type: string
                        role_in_org:
                          type: string
                        additional_roles_in_org:
                          type: array
                          items: {}
                        created_at:
                          type: integer
                        expires_at:
                          type: integer
                        inviter_email:
                          nullable: true
                        inviter_user_id:
                          nullable: true
  /api/backend/v1/pending_org_invites:
    parameters: []
    delete:
      summary: Revoke Pending Org Invite
      parameters: []
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Wed, 14 Aug 2024 15:06:15 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            content-security-policy:
              schema:
                type: string
              example: >-
                object-src 'none'; child-src 'none'; frame-src 'none';
                worker-src 'none'; frame-ancestors http://localhost:3000;
                upgrade-insecure-requests; block-all-mixed-content; report-uri
                https://o1012663.ingest.sentry.io/api/5999441/security/?sentry_key=bb28f260aa2345428f23cd62a1ac1f34
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invitee_email:
                  type: string
                  format: email
                org_id:
                  type: string
  /api/backend/v1/org/{ORG_ID}/create_saml_connection_link:
    parameters: []
    post:
      summary: Create SAML Connection Link
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Fri, 22 Nov 2024 15:41:34 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '153'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expires_in_seconds:
                  type: integer
  /api/backend/v1/org/{org_id}/roles:
    get:
      summary: List all roles in an organization
      parameters:
        - name: org_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: array of roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'

    post:
      summary: Create a new role
      parameters:
        - name: org_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: role created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'

  /api/backend/v1/org/{org_id}/permissions:
    get:
      summary: List all permissions in an organization
      parameters:
        - name: org_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: array of permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'

    post:
      summary: Create a new permission
      parameters:
        - name: org_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: permission created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'

  /api/backend/v1/org/{org_id}/roles/{role_id}/permissions:
    put:
      summary: Set a role’s permission list
      parameters:
        - name: org_id
          in: path
          required: true
          schema:
            type: string
        - name: role_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permission_ids:
                  type: array
                  items:
                    type: string
      responses:
        '204':
          description: no content

  /api/backend/v1/org/{org_id}/roles/{role_id}/inheritance:
    put:
      summary: Define parent roles for a role
      parameters:
        - name: org_id
          in: path
          required: true
          schema:
            type: string
        - name: role_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                parent_role_ids:
                  type: array
                  items:
                    type: string
      responses:
        '204':
          description: no content

  /api/backend/v1/org/{org_id}/roles/{role_id}/users:
    put:
      summary: Assign users to a role
      parameters:
        - name: org_id
          in: path
          required: true
          schema:
            type: string
        - name: role_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_ids:
                  type: array
                  items:
                    type: string
      responses:
        '204':
          description: no content
  /api/backend/v1/saml_sp_metadata/{ORG_ID}:
    parameters: []
    get:
      summary: Fetch Org SAML Metadata
      parameters: []
      responses:
        '200':
          headers:
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '296'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  entity_id:
                    type: string
                    format: uri
                  acs_url:
                    type: string
                    format: uri
                  logout_url:
                    type: string
                    format: uri
  /api/backend/v1/saml_idp_metadata:
    parameters: []
    post:
      summary: Set SAML IdP Metadata
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Tue, 12 Nov 2024 22:37:53 GMT
            content-length:
              schema:
                type: integer
              example: '0'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idp_entity_id:
                  type: string
                  format: uri
                idp_sso_url:
                  type: string
                  format: uri
                idp_certificate:
                  type: string
                provider:
                  type: string
                org_id:
                  type: string
  /api/backend/v1/saml_idp_metadata/go_live/{ORG_ID}:
    parameters: []
    post:
      summary: Enable SAML Connection
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Tue, 12 Nov 2024 22:28:55 GMT
            content-length:
              schema:
                type: integer
              example: '0'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
      requestBody:
        content:
          application/json:
            schema:
              type: object
  /api/backend/v1/saml_idp_metadata/{ORG_ID}:
    parameters: []
    delete:
      summary: Delete SAML Connection
      parameters: []
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Tue, 12 Nov 2024 22:30:03 GMT
            content-length:
              schema:
                type: integer
              example: '0'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
      requestBody:
        content:
          application/json:
            schema:
              type: object
  /api/backend/v1/end_user_api_keys/validate:
    parameters: []
    post:
      summary: Validate API Key
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Thu, 11 Apr 2024 14:52:53 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '1027'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    nullable: true
                  user:
                    type: object
                    properties:
                      user_id:
                        type: string
                      email:
                        type: string
                        format: email
                      email_confirmed:
                        type: boolean
                      has_password:
                        type: boolean
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      picture_url:
                        type: string
                        format: uri
                      properties:
                        type: object
                        properties:
                          tos:
                            type: boolean
                          favoriteSport:
                            type: string
                      metadata:
                        nullable: true
                      locked:
                        type: boolean
                      enabled:
                        type: boolean
                      mfa_enabled:
                        type: boolean
                      can_create_orgs:
                        type: boolean
                      created_at:
                        type: integer
                      last_active_at:
                        type: integer
                      org_id_to_org_info:
                        type: object
                        properties:
                          bdfbbf84-bcee-4dfe-baa5-1e2dc092991d:
                            type: object
                            properties:
                              org_id:
                                type: string
                              org_name:
                                type: string
                              org_metadata:
                                type: object
                              url_safe_org_name:
                                type: string
                              user_role:
                                type: string
                              inherited_user_roles_plus_current_role:
                                type: array
                                items:
                                  type: string
                              user_permissions:
                                type: array
                                items:
                                  type: string
                                  format: uri
                      update_password_required:
                        type: boolean
                  org:
                    nullable: true
                  user_in_org:
                    nullable: true
                  user_id:
                    type: string
                  org_id:
                    nullable: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key_token:
                  type: string
  /api/backend/v1/end_user_api_keys:
    parameters: []
    post:
      summary: Create API Key
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Thu, 11 Apr 2024 14:40:25 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '164'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_key_id:
                    type: string
                  api_key_token:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                expires_at_seconds:
                  type: integer
                metadata:
                  type: object
                  properties:
                    customKey:
                      type: string
    get:
      summary: Fetch Active API Keys
      parameters:
        - name: user_id
          in: query
          required: false
          description: Filter by the user ID of the API key owner.
          example: <user_id>
          schema:
            type: string
        - name: user_email
          in: query
          required: false
          description: Filter by the email of the API key owner.
          example: <user_email>
          schema:
            type: string
        - name: org_id
          in: query
          required: false
          description: Filter by the organization ID of the API key owner.
          example: <org_id>
          schema:
            type: string
        - name: page_size
          in: query
          required: false
          description: The number of results to return per page.
          example: '10'
          schema:
            type: integer
        - name: page_number
          in: query
          required: false
          description: The page number to return.
          example: '0'
          schema:
            type: integer
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Thu, 11 Apr 2024 14:57:43 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '269'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_keys:
                    type: array
                    items:
                      type: object
                      properties:
                        api_key_id:
                          type: string
                        created_at:
                          type: integer
                        expires_at_seconds:
                          nullable: true
                        metadata:
                          nullable: true
                        user_id:
                          type: string
                        org_id:
                          nullable: true
                  total_api_keys:
                    type: integer
                  current_page:
                    type: integer
                  page_size:
                    type: integer
                  has_more_results:
                    type: boolean
  /api/backend/v1/end_user_api_keys/{END_USER_API_KEY_ID}:
    parameters: []
    patch:
      summary: Update API Key
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Thu, 11 Apr 2024 14:53:42 GMT
            content-length:
              schema:
                type: integer
              example: '0'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expires_at_seconds:
                  type: integer
                metadata:
                  type: object
                  properties:
                    customKey:
                      type: string
    delete:
      summary: Delete API Key
      parameters: []
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Thu, 11 Apr 2024 14:55:19 GMT
            content-length:
              schema:
                type: integer
              example: '0'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
    get:
      summary: Fetch API Key
      parameters: []
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Thu, 11 Apr 2024 14:56:21 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '178'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_key_id:
                    type: string
                  created_at:
                    type: integer
                  expires_at_seconds:
                    nullable: true
                  metadata:
                    nullable: true
                  user_id:
                    type: string
                  org_id:
                    nullable: true
  /api/backend/v1/end_user_api_keys/archived:
    parameters: []
    get:
      summary: Fetch Expired API Keys
      parameters:
        - name: user_id
          in: query
          required: false
          description: Filter by the user ID of the API key owner.
          example: <user_id>
          schema:
            type: string
        - name: user_email
          in: query
          required: false
          description: Filter by the email of the API key owner.
          example: <user_email>
          schema:
            type: string
        - name: org_id
          in: query
          required: false
          description: Filter by the organization ID of the API key owner.
          example: <org_id>
          schema:
            type: string
        - name: page_size
          in: query
          required: false
          description: The number of results to return per page.
          example: '10'
          schema:
            type: integer
        - name: page_number
          in: query
          required: false
          description: The page number to return.
          example: '0'
          schema:
            type: integer
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Thu, 11 Apr 2024 14:58:50 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '673'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_keys:
                    type: array
                    items:
                      type: object
                      properties:
                        api_key_id:
                          type: string
                        created_at:
                          type: integer
                        expires_at_seconds:
                          type: integer
                        metadata:
                          type: object
                          properties:
                            customKey:
                              type: string
                        user_id:
                          type: string
                        org_id:
                          type: string
                  total_api_keys:
                    type: integer
                  current_page:
                    type: integer
                  page_size:
                    type: integer
                  has_more_results:
                    type: boolean
  /api/backend/v1/user/{USER_ID}/oauth_token:
    parameters: []
    get:
      summary: Fetch User OAuth Tokens
      parameters: []
      responses: {}
  /api/backend/v1/mfa/step-up/verify-totp:
    parameters: []
    post:
      summary: Verify TOTP Challenge
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Fri, 18 Apr 2025 18:05:50 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '116'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
                properties:
                  step_up_grant:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action_type:
                  type: string
                user_id:
                  type: string
                code:
                  type: string
                  format: color
                grant_type:
                  type: string
                valid_for_seconds:
                  type: integer
  /api/backend/v1/mfa/step-up/verify-grant:
    parameters: []
    post:
      summary: Verify Step-Up Grant
      parameters:
        - name: Content-Type
          in: header
          required: false
          example: application/json
          schema:
            type: string
      responses:
        '200':
          headers:
            date:
              schema:
                type: string
              example: Fri, 18 Apr 2025 18:06:23 GMT
            content-type:
              schema:
                type: string
              example: application/json
            content-length:
              schema:
                type: integer
              example: '2'
            cross-origin-resource-policy:
              schema:
                type: string
              example: same-origin
            x-permitted-cross-domain-policies:
              schema:
                type: string
              example: none
            access-control-allow-credentials:
              schema:
                type: boolean
              example: 'true'
            cross-origin-embedder-policy:
              schema:
                type: string
              example: require-corp
            strict-transport-security:
              schema:
                type: string
              example: max-age=31536000 ; includeSubDomains
            x-xss-protection:
              schema:
                type: integer
              example: 1; mode=block
            x-content-type-options:
              schema:
                type: string
              example: nosniff
            permissions-policy:
              schema:
                type: string
              example: >-
                geolocation=(), midi=(), camera=(), usb=(), magnetometer=(),
                accelerometer=(), vr=(), speaker=(), ambient-light-sensor=(),
                gyroscope=(), microphone=()
            referrer-policy:
              schema:
                type: string
              example: no-referrer
            cross-origin-opener-policy:
              schema:
                type: string
              example: same-origin
          description: Success Response (200)
          content:
            application/json:
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action_type:
                  type: string
                user_id:
                  type: string
                grant:
                  type: string

components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: string
        email:
          type: string
          format: email
        email_confirmed:
          type: boolean
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        picture_url:
          type: string
          format: uri
        properties:
          type: object
          properties:
            favoriteSport:
              type: string
        has_password:
          type: boolean
        update_password_required:
          type: boolean
        locked:
          type: boolean
        enabled:
          type: boolean
        mfa_enabled:
          type: boolean
        can_create_orgs:
          type: boolean
        created_at:
          type: integer
          description: Epoch timestamp of user creation
        last_active_at:
          type: integer
          description: Epoch timestamp of last activity
        org_id_to_org_info:
          type: object
          additionalProperties:
            type: object
            properties:
              org_id:
                type: string
              org_name:
                type: string
              org_metadata:
                type: object
                properties:
                  timezone:
                    type: string
              user_role:
                type: string
              url_safe_org_name:
                type: string
              inherited_user_roles_plus_current_role:
                type: array
                items:
                  type: string
              user_permissions:
                type: array
                items:
                  type: string
              org_role_structure:
                type: string
              additional_roles:
                type: array
                items:
                  type: string
        legacy_user_id:
          type: string
    CreateUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        email_confirmed:
          type: boolean
        send_email_to_confirm_email_address:
          type: boolean
        password:
          type: string
        ask_user_to_update_password_on_login:
          type: boolean
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        properties:
          type: object
          properties:
            favoriteSport:
              type: string
        ignore_domain_restrictions:
          type: boolean

    Role:
      type: object
      properties:
        role_id: { type: string }
        org_id:  { type: string }
        name:    { type: string }
        description: { type: string }
        created_at:  { type: string, format: date-time }

    Permission:
      type: object
      properties:
        permission_id: { type: string }
        org_id:        { type: string }
        name:          { type: string }
        description:   { type: string }
        created_at:    { type: string, format: date-time }